name: Create GitHub Release

on:
  push:
    tags:
      - 'v*.*.*' # vで始まるタグがプッシュされたときに実行

jobs:
  draft_release:
    runs-on: ubuntu-latest
    permissions:
      contents: write # to create release drafts
      pull-requests: read # to read pull request information
    steps:
      - name: Draft release notes
        uses: release-drafter/release-drafter@v6
        with:
          config-name: release-drafter.yml # Use our custom config
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-and-release:
    needs: draft_release # Wait for the draft to be created
    runs-on: ubuntu-latest # 実行環境
    permissions:
      contents: write # リリース編集・アセットアップロードのために必要

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Deno
        uses: denoland/setup-deno@v2
        with:
          deno-version: 2.x

      # オプション: Denoの依存関係キャッシュ (ビルド高速化のため)
      - name: Cache Deno dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/deno
          key: ${{ runner.os }}-deno-${{ hashFiles('deno.lock') }}
          restore-keys: |
            ${{ runner.os }}-deno-

      - name: Build single HTML file
        run: deno task release:build

      - name: Check if release draft exists # ★追加: リリース存在確認ステップ
        id: check_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          if gh release view ${{ github.ref_name }}; then
            echo "Release draft found."
            echo "exists=true" >> $GITHUB_OUTPUT
          else
            echo "Release draft NOT found for tag ${{ github.ref_name }}!"
            echo "exists=false" >> $GITHUB_OUTPUT
            # 必要に応じてここでワークフローを失敗させることも可能
            # exit 1
          fi

      - name: Edit GitHub Release and Upload Artifact
        if: steps.check_release.outputs.exists == 'true' # ★追加: リリースが存在する場合のみ実行
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # 自動的に提供されるトークン
        run: |
          # リリースを公開状態にする (ドラフト解除)
          gh release edit ${{ github.ref_name }} --draft=false
          # ビルド成果物をアップロード
          gh release upload ${{ github.ref_name }} ./dist/tanshu3.html
          echo "Release ${{ github.ref_name }} published and tanshu3.html artifact uploaded."

      - name: Handle missing release draft
        if: steps.check_release.outputs.exists == 'false'
        run: |
          echo "::error::Release draft for tag ${{ github.ref_name }} was not found. Please check the 'draft_release' job logs and the release-drafter configuration."
          exit 1 # ワークフローを失敗させる
